package com.cts.appone.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.encoding.LdapShaPasswordEncoder;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@EnableWebSecurity
@Configuration
public class SecurityConfig extends WebSecurityConfigurerAdapter {

	@Autowired
	protected void configureUser(AuthenticationManagerBuilder auth) throws Exception {
		auth
		.ldapAuthentication()
		.contextSource()
			.url("ldap://ldap.forumsys.com:389/" + "dc=example,dc=com")
				.managerDn("cn=read-only-admin,dc=example,dc=com")
				.managerPassword("password")
			.and()
				.userDnPatterns("uid={0}");
		/*auth.inMemoryAuthentication().withUser("billy").password("bob").roles("USER").and().withUser("admin")
				.password("adminpassword").roles("ADMIN");*/
	}

	// We do not want the default behavior of form authentication
	// before HTTP Basic authentication we get
	// from WebSecurityConfigurerAdapter.
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		//http.authorizeRequests().anyRequest().fullyAuthenticated().and().httpBasic();
		http
        .authorizeRequests()
            .antMatchers("**/admin").hasRole("ADMIN")
            .anyRequest().fullyAuthenticated()
        .and()
            .formLogin();
	}

}
